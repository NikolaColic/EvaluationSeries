// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: evaluation.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EvaluationSeries.Grpc {
  public static partial class EvaluationGrpc
  {
    static readonly string __ServiceName = "EvaluationGrpc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesEvaluationAdd> __Marshaller_SeriesEvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesEvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Marshaller_EvaluationMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationMessageResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate> __Marshaller_SeriesEvaluationUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesEvaluationUpdate.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserEvaluationAdd> __Marshaller_UserEvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserEvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserEvaluationUpdate> __Marshaller_UserEvaluationUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserEvaluationUpdate.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationEmpty> __Marshaller_EvaluationEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationEmpty.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationsResponse> __Marshaller_EvaluationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationsResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationAddId> __Marshaller_EvaluationAddId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationAddId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationAdd> __Marshaller_EvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.CriterionsResponse> __Marshaller_CriterionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.CriterionsResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.MarksResponse> __Marshaller_MarksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.MarksResponse.Parser));

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostSeries",
        __Marshaller_SeriesEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutSeries",
        __Marshaller_SeriesEvaluationUpdate,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSeries",
        __Marshaller_SeriesEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostUser",
        __Marshaller_UserEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutUser",
        __Marshaller_UserEvaluationUpdate,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_UserEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.EvaluationsResponse> __Method_GetAllEvaluations = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.EvaluationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEvaluations",
        __Marshaller_EvaluationEmpty,
        __Marshaller_EvaluationsResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationAdd> __Method_GetEvaluationById = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationAdd>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluationById",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationAdd);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostEvaluation = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostEvaluation",
        __Marshaller_EvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteEvaluation = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEvaluation",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.CriterionsResponse> __Method_GetAllCriteria = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.CriterionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllCriteria",
        __Marshaller_EvaluationEmpty,
        __Marshaller_CriterionsResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.MarksResponse> __Method_GetAllMarks = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.MarksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllMarks",
        __Marshaller_EvaluationEmpty,
        __Marshaller_MarksResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostMarks = new grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostMarks",
        __Marshaller_MarksResponse,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutMarks = new grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutMarks",
        __Marshaller_MarksResponse,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteMarks = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMarks",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationMessageResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EvaluationSeries.Grpc.EvaluationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for EvaluationGrpc</summary>
    public partial class EvaluationGrpcClient : grpc::ClientBase<EvaluationGrpcClient>
    {
      /// <summary>Creates a new client for EvaluationGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EvaluationGrpcClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EvaluationGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EvaluationGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EvaluationGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EvaluationGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSeries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostSeries, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSeriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostSeries, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutSeries(global::EvaluationSeries.Grpc.SeriesEvaluationUpdate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutSeries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutSeries(global::EvaluationSeries.Grpc.SeriesEvaluationUpdate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutSeries, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationUpdate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutSeriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationUpdate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutSeries, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSeries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSeries, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSeriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteSeriesAsync(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSeries, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostUserAsync(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostUserAsync(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostUser, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutUser(global::EvaluationSeries.Grpc.UserEvaluationUpdate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutUser(global::EvaluationSeries.Grpc.UserEvaluationUpdate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutUserAsync(global::EvaluationSeries.Grpc.UserEvaluationUpdate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutUserAsync(global::EvaluationSeries.Grpc.UserEvaluationUpdate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutUser, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteUserAsync(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteUserAsync(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUser, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationsResponse GetAllEvaluations(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationsResponse GetAllEvaluations(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllEvaluations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationsResponse> GetAllEvaluationsAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationsResponse> GetAllEvaluationsAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllEvaluations, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationAdd GetEvaluationById(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationAdd GetEvaluationById(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvaluationById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationAdd> GetEvaluationByIdAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationAdd> GetEvaluationByIdAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvaluationById, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostEvaluation(global::EvaluationSeries.Grpc.EvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostEvaluation(global::EvaluationSeries.Grpc.EvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostEvaluation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostEvaluationAsync(global::EvaluationSeries.Grpc.EvaluationAdd request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostEvaluationAsync(global::EvaluationSeries.Grpc.EvaluationAdd request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostEvaluation, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteEvaluation(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteEvaluation(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEvaluation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteEvaluationAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteEvaluationAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEvaluation, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.CriterionsResponse GetAllCriteria(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCriteria(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.CriterionsResponse GetAllCriteria(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllCriteria, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.CriterionsResponse> GetAllCriteriaAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCriteriaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.CriterionsResponse> GetAllCriteriaAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllCriteria, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.MarksResponse GetAllMarks(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.MarksResponse GetAllMarks(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllMarks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.MarksResponse> GetAllMarksAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.MarksResponse> GetAllMarksAsync(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllMarks, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PostMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostMarks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostMarksAsync(global::EvaluationSeries.Grpc.MarksResponse request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostMarksAsync(global::EvaluationSeries.Grpc.MarksResponse request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostMarks, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse PutMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutMarks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutMarksAsync(global::EvaluationSeries.Grpc.MarksResponse request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutMarksAsync(global::EvaluationSeries.Grpc.MarksResponse request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutMarks, null, options, request);
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteMarks(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EvaluationSeries.Grpc.EvaluationMessageResponse DeleteMarks(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMarks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteMarksAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteMarksAsync(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMarks, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EvaluationGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EvaluationGrpcClient(configuration);
      }
    }

  }
}
#endregion
