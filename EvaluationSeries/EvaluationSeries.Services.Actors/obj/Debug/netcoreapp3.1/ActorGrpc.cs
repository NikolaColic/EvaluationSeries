// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: actor.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EvaluationSeries.Grpc {
  public static partial class ActorsGrpc
  {
    static readonly string __ServiceName = "ActorsGrpc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorEmpty> __Marshaller_ActorEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorEmpty.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetActorsResponse> __Marshaller_GetActorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetActorsResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorAdd> __Marshaller_ActorAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorsMessageResponse> __Marshaller_ActorsMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorsMessageResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorId> __Marshaller_ActorId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetActorByIdResponse> __Marshaller_GetActorByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetActorByIdResponse.Parser));

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorEmpty, global::EvaluationSeries.Grpc.GetActorsResponse> __Method_GetActors = new grpc::Method<global::EvaluationSeries.Grpc.ActorEmpty, global::EvaluationSeries.Grpc.GetActorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActors",
        __Marshaller_ActorEmpty,
        __Marshaller_GetActorsResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse> __Method_PostActor = new grpc::Method<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostActor",
        __Marshaller_ActorAdd,
        __Marshaller_ActorsMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse> __Method_PutActor = new grpc::Method<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutActor",
        __Marshaller_ActorAdd,
        __Marshaller_ActorsMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.ActorsMessageResponse> __Method_DeleteActor = new grpc::Method<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.ActorsMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteActor",
        __Marshaller_ActorId,
        __Marshaller_ActorsMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.GetActorByIdResponse> __Method_GetActorsId = new grpc::Method<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.GetActorByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActorsId",
        __Marshaller_ActorId,
        __Marshaller_GetActorByIdResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EvaluationSeries.Grpc.ActorReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ActorsGrpc</summary>
    [grpc::BindServiceMethod(typeof(ActorsGrpc), "BindService")]
    public abstract partial class ActorsGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetActorsResponse> GetActors(global::EvaluationSeries.Grpc.ActorEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.ActorsMessageResponse> PostActor(global::EvaluationSeries.Grpc.ActorAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.ActorsMessageResponse> PutActor(global::EvaluationSeries.Grpc.ActorAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.ActorsMessageResponse> DeleteActor(global::EvaluationSeries.Grpc.ActorId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetActorByIdResponse> GetActorsId(global::EvaluationSeries.Grpc.ActorId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ActorsGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetActors, serviceImpl.GetActors)
          .AddMethod(__Method_PostActor, serviceImpl.PostActor)
          .AddMethod(__Method_PutActor, serviceImpl.PutActor)
          .AddMethod(__Method_DeleteActor, serviceImpl.DeleteActor)
          .AddMethod(__Method_GetActorsId, serviceImpl.GetActorsId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ActorsGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetActors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorEmpty, global::EvaluationSeries.Grpc.GetActorsResponse>(serviceImpl.GetActors));
      serviceBinder.AddMethod(__Method_PostActor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse>(serviceImpl.PostActor));
      serviceBinder.AddMethod(__Method_PutActor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorAdd, global::EvaluationSeries.Grpc.ActorsMessageResponse>(serviceImpl.PutActor));
      serviceBinder.AddMethod(__Method_DeleteActor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.ActorsMessageResponse>(serviceImpl.DeleteActor));
      serviceBinder.AddMethod(__Method_GetActorsId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorId, global::EvaluationSeries.Grpc.GetActorByIdResponse>(serviceImpl.GetActorsId));
    }

  }
}
#endregion
