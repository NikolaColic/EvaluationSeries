// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: series.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EvaluationSeries.Grpc {
  public static partial class SeriesGrpc
  {
    static readonly string __ServiceName = "SeriesGrpc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesEmpty> __Marshaller_SeriesEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesEmpty.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetSeriesResponse> __Marshaller_GetSeriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetSeriesResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesFull> __Marshaller_SeriesFull = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesFull.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesMessageResponse> __Marshaller_SeriesMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesMessageResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesId> __Marshaller_SeriesId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetSeriesByIdResponse> __Marshaller_GetSeriesByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetSeriesByIdResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetRolesResponse> __Marshaller_GetRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetRolesResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.RoleAdd> __Marshaller_RoleAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.RoleAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesRoleId> __Marshaller_SeriesRoleId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesRoleId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorSeries> __Marshaller_ActorSeries = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorSeries.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.ActorSeriesUpdate> __Marshaller_ActorSeriesUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.ActorSeriesUpdate.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetGenresResponse> __Marshaller_GetGenresResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetGenresResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.GetCountryResponse> __Marshaller_GetCountryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.GetCountryResponse.Parser));

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetSeriesResponse> __Method_GetAllSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetSeriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSeries",
        __Marshaller_SeriesEmpty,
        __Marshaller_GetSeriesResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_PostSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostSeries",
        __Marshaller_SeriesFull,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_PutSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutSeries",
        __Marshaller_SeriesFull,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_DeleteSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSeries",
        __Marshaller_SeriesId,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetSeriesByIdResponse> __Method_GetSeriesById = new grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetSeriesByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSeriesById",
        __Marshaller_SeriesId,
        __Marshaller_GetSeriesByIdResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetRolesResponse> __Method_GerRolesSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GerRolesSeries",
        __Marshaller_SeriesId,
        __Marshaller_GetRolesResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.RoleAdd, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_PostRole = new grpc::Method<global::EvaluationSeries.Grpc.RoleAdd, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostRole",
        __Marshaller_RoleAdd,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesRoleId, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_DeleteRole = new grpc::Method<global::EvaluationSeries.Grpc.SeriesRoleId, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRole",
        __Marshaller_SeriesRoleId,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_PostActorSeries = new grpc::Method<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostActorSeries",
        __Marshaller_ActorSeries,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorSeriesUpdate, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_PutActorSeries = new grpc::Method<global::EvaluationSeries.Grpc.ActorSeriesUpdate, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutActorSeries",
        __Marshaller_ActorSeriesUpdate,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse> __Method_DeleteActorSeries = new grpc::Method<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteActorSeries",
        __Marshaller_ActorSeries,
        __Marshaller_SeriesMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetGenresResponse> __Method_GetAllGenre = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetGenresResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllGenre",
        __Marshaller_SeriesEmpty,
        __Marshaller_GetGenresResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetCountryResponse> __Method_GetAllCountry = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetCountryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllCountry",
        __Marshaller_SeriesEmpty,
        __Marshaller_GetCountryResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetRolesResponse> __Method_GetAllRoles = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllRoles",
        __Marshaller_SeriesEmpty,
        __Marshaller_GetRolesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EvaluationSeries.Grpc.SeriesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SeriesGrpc</summary>
    [grpc::BindServiceMethod(typeof(SeriesGrpc), "BindService")]
    public abstract partial class SeriesGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetSeriesResponse> GetAllSeries(global::EvaluationSeries.Grpc.SeriesEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> PostSeries(global::EvaluationSeries.Grpc.SeriesFull request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> PutSeries(global::EvaluationSeries.Grpc.SeriesFull request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> DeleteSeries(global::EvaluationSeries.Grpc.SeriesId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetSeriesByIdResponse> GetSeriesById(global::EvaluationSeries.Grpc.SeriesId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetRolesResponse> GerRolesSeries(global::EvaluationSeries.Grpc.SeriesId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> PostRole(global::EvaluationSeries.Grpc.RoleAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> DeleteRole(global::EvaluationSeries.Grpc.SeriesRoleId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> PostActorSeries(global::EvaluationSeries.Grpc.ActorSeries request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> PutActorSeries(global::EvaluationSeries.Grpc.ActorSeriesUpdate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.SeriesMessageResponse> DeleteActorSeries(global::EvaluationSeries.Grpc.ActorSeries request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetGenresResponse> GetAllGenre(global::EvaluationSeries.Grpc.SeriesEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetCountryResponse> GetAllCountry(global::EvaluationSeries.Grpc.SeriesEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.GetRolesResponse> GetAllRoles(global::EvaluationSeries.Grpc.SeriesEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SeriesGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllSeries, serviceImpl.GetAllSeries)
          .AddMethod(__Method_PostSeries, serviceImpl.PostSeries)
          .AddMethod(__Method_PutSeries, serviceImpl.PutSeries)
          .AddMethod(__Method_DeleteSeries, serviceImpl.DeleteSeries)
          .AddMethod(__Method_GetSeriesById, serviceImpl.GetSeriesById)
          .AddMethod(__Method_GerRolesSeries, serviceImpl.GerRolesSeries)
          .AddMethod(__Method_PostRole, serviceImpl.PostRole)
          .AddMethod(__Method_DeleteRole, serviceImpl.DeleteRole)
          .AddMethod(__Method_PostActorSeries, serviceImpl.PostActorSeries)
          .AddMethod(__Method_PutActorSeries, serviceImpl.PutActorSeries)
          .AddMethod(__Method_DeleteActorSeries, serviceImpl.DeleteActorSeries)
          .AddMethod(__Method_GetAllGenre, serviceImpl.GetAllGenre)
          .AddMethod(__Method_GetAllCountry, serviceImpl.GetAllCountry)
          .AddMethod(__Method_GetAllRoles, serviceImpl.GetAllRoles).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SeriesGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetSeriesResponse>(serviceImpl.GetAllSeries));
      serviceBinder.AddMethod(__Method_PostSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.PostSeries));
      serviceBinder.AddMethod(__Method_PutSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesFull, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.PutSeries));
      serviceBinder.AddMethod(__Method_DeleteSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.DeleteSeries));
      serviceBinder.AddMethod(__Method_GetSeriesById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetSeriesByIdResponse>(serviceImpl.GetSeriesById));
      serviceBinder.AddMethod(__Method_GerRolesSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesId, global::EvaluationSeries.Grpc.GetRolesResponse>(serviceImpl.GerRolesSeries));
      serviceBinder.AddMethod(__Method_PostRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.RoleAdd, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.PostRole));
      serviceBinder.AddMethod(__Method_DeleteRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesRoleId, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.DeleteRole));
      serviceBinder.AddMethod(__Method_PostActorSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.PostActorSeries));
      serviceBinder.AddMethod(__Method_PutActorSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorSeriesUpdate, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.PutActorSeries));
      serviceBinder.AddMethod(__Method_DeleteActorSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.ActorSeries, global::EvaluationSeries.Grpc.SeriesMessageResponse>(serviceImpl.DeleteActorSeries));
      serviceBinder.AddMethod(__Method_GetAllGenre, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetGenresResponse>(serviceImpl.GetAllGenre));
      serviceBinder.AddMethod(__Method_GetAllCountry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetCountryResponse>(serviceImpl.GetAllCountry));
      serviceBinder.AddMethod(__Method_GetAllRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEmpty, global::EvaluationSeries.Grpc.GetRolesResponse>(serviceImpl.GetAllRoles));
    }

  }
}
#endregion
