// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EvaluationSeries.Grpc {
  public static partial class UserGrpc
  {
    static readonly string __ServiceName = "UserGrpc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserEmpty> __Marshaller_UserEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserEmpty.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UsersResponse> __Marshaller_UsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UsersResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserAdd> __Marshaller_UserAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserMessageResponse> __Marshaller_UserMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserMessageResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserId> __Marshaller_UserId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserAuthentication> __Marshaller_UserAuthentication = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserAuthentication.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserAuthenticationResponse> __Marshaller_UserAuthenticationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserAuthenticationResponse.Parser));

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEmpty, global::EvaluationSeries.Grpc.UsersResponse> __Method_GetUsers = new grpc::Method<global::EvaluationSeries.Grpc.UserEmpty, global::EvaluationSeries.Grpc.UsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_UserEmpty,
        __Marshaller_UsersResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse> __Method_PostUser = new grpc::Method<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostUser",
        __Marshaller_UserAdd,
        __Marshaller_UserMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse> __Method_PutUser = new grpc::Method<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutUser",
        __Marshaller_UserAdd,
        __Marshaller_UserMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserId, global::EvaluationSeries.Grpc.UserMessageResponse> __Method_DeleteUser = new grpc::Method<global::EvaluationSeries.Grpc.UserId, global::EvaluationSeries.Grpc.UserMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_UserId,
        __Marshaller_UserMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserAuthentication, global::EvaluationSeries.Grpc.UserAuthenticationResponse> __Method_Authentication = new grpc::Method<global::EvaluationSeries.Grpc.UserAuthentication, global::EvaluationSeries.Grpc.UserAuthenticationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authentication",
        __Marshaller_UserAuthentication,
        __Marshaller_UserAuthenticationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EvaluationSeries.Grpc.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserGrpc</summary>
    [grpc::BindServiceMethod(typeof(UserGrpc), "BindService")]
    public abstract partial class UserGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.UsersResponse> GetUsers(global::EvaluationSeries.Grpc.UserEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.UserMessageResponse> PostUser(global::EvaluationSeries.Grpc.UserAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.UserMessageResponse> PutUser(global::EvaluationSeries.Grpc.UserAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.UserMessageResponse> DeleteUser(global::EvaluationSeries.Grpc.UserId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.UserAuthenticationResponse> Authentication(global::EvaluationSeries.Grpc.UserAuthentication request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers)
          .AddMethod(__Method_PostUser, serviceImpl.PostUser)
          .AddMethod(__Method_PutUser, serviceImpl.PutUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_Authentication, serviceImpl.Authentication).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserEmpty, global::EvaluationSeries.Grpc.UsersResponse>(serviceImpl.GetUsers));
      serviceBinder.AddMethod(__Method_PostUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse>(serviceImpl.PostUser));
      serviceBinder.AddMethod(__Method_PutUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserAdd, global::EvaluationSeries.Grpc.UserMessageResponse>(serviceImpl.PutUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserId, global::EvaluationSeries.Grpc.UserMessageResponse>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_Authentication, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserAuthentication, global::EvaluationSeries.Grpc.UserAuthenticationResponse>(serviceImpl.Authentication));
    }

  }
}
#endregion
