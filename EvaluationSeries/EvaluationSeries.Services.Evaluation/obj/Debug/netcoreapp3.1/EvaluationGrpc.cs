// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: evaluation.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EvaluationSeries.Grpc {
  public static partial class EvaluationGrpc
  {
    static readonly string __ServiceName = "EvaluationGrpc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesEvaluationAdd> __Marshaller_SeriesEvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesEvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Marshaller_EvaluationMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationMessageResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate> __Marshaller_SeriesEvaluationUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.SeriesEvaluationUpdate.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserEvaluationAdd> __Marshaller_UserEvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserEvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.UserEvaluationUpdate> __Marshaller_UserEvaluationUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.UserEvaluationUpdate.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationEmpty> __Marshaller_EvaluationEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationEmpty.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationsResponse> __Marshaller_EvaluationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationsResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationAddId> __Marshaller_EvaluationAddId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationAddId.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.EvaluationAdd> __Marshaller_EvaluationAdd = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.EvaluationAdd.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.CriterionsResponse> __Marshaller_CriterionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.CriterionsResponse.Parser));
    static readonly grpc::Marshaller<global::EvaluationSeries.Grpc.MarksResponse> __Marshaller_MarksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EvaluationSeries.Grpc.MarksResponse.Parser));

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostSeries",
        __Marshaller_SeriesEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutSeries",
        __Marshaller_SeriesEvaluationUpdate,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteSeries = new grpc::Method<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSeries",
        __Marshaller_SeriesEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostUser",
        __Marshaller_UserEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutUser",
        __Marshaller_UserEvaluationUpdate,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteUser = new grpc::Method<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_UserEvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.EvaluationsResponse> __Method_GetAllEvaluations = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.EvaluationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEvaluations",
        __Marshaller_EvaluationEmpty,
        __Marshaller_EvaluationsResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationAdd> __Method_GetEvaluationById = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationAdd>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluationById",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationAdd);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostEvaluation = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostEvaluation",
        __Marshaller_EvaluationAdd,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteEvaluation = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEvaluation",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.CriterionsResponse> __Method_GetAllCriteria = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.CriterionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllCriteria",
        __Marshaller_EvaluationEmpty,
        __Marshaller_CriterionsResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.MarksResponse> __Method_GetAllMarks = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.MarksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllMarks",
        __Marshaller_EvaluationEmpty,
        __Marshaller_MarksResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PostMarks = new grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostMarks",
        __Marshaller_MarksResponse,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_PutMarks = new grpc::Method<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutMarks",
        __Marshaller_MarksResponse,
        __Marshaller_EvaluationMessageResponse);

    static readonly grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse> __Method_DeleteMarks = new grpc::Method<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMarks",
        __Marshaller_EvaluationAddId,
        __Marshaller_EvaluationMessageResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EvaluationSeries.Grpc.EvaluationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EvaluationGrpc</summary>
    [grpc::BindServiceMethod(typeof(EvaluationGrpc), "BindService")]
    public abstract partial class EvaluationGrpcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutSeries(global::EvaluationSeries.Grpc.SeriesEvaluationUpdate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteSeries(global::EvaluationSeries.Grpc.SeriesEvaluationAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutUser(global::EvaluationSeries.Grpc.UserEvaluationUpdate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteUser(global::EvaluationSeries.Grpc.UserEvaluationAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationsResponse> GetAllEvaluations(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationAdd> GetEvaluationById(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostEvaluation(global::EvaluationSeries.Grpc.EvaluationAdd request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteEvaluation(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.CriterionsResponse> GetAllCriteria(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.MarksResponse> GetAllMarks(global::EvaluationSeries.Grpc.EvaluationEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PostMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> PutMarks(global::EvaluationSeries.Grpc.MarksResponse request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EvaluationSeries.Grpc.EvaluationMessageResponse> DeleteMarks(global::EvaluationSeries.Grpc.EvaluationAddId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EvaluationGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PostSeries, serviceImpl.PostSeries)
          .AddMethod(__Method_PutSeries, serviceImpl.PutSeries)
          .AddMethod(__Method_DeleteSeries, serviceImpl.DeleteSeries)
          .AddMethod(__Method_PostUser, serviceImpl.PostUser)
          .AddMethod(__Method_PutUser, serviceImpl.PutUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_GetAllEvaluations, serviceImpl.GetAllEvaluations)
          .AddMethod(__Method_GetEvaluationById, serviceImpl.GetEvaluationById)
          .AddMethod(__Method_PostEvaluation, serviceImpl.PostEvaluation)
          .AddMethod(__Method_DeleteEvaluation, serviceImpl.DeleteEvaluation)
          .AddMethod(__Method_GetAllCriteria, serviceImpl.GetAllCriteria)
          .AddMethod(__Method_GetAllMarks, serviceImpl.GetAllMarks)
          .AddMethod(__Method_PostMarks, serviceImpl.PostMarks)
          .AddMethod(__Method_PutMarks, serviceImpl.PutMarks)
          .AddMethod(__Method_DeleteMarks, serviceImpl.DeleteMarks).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EvaluationGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PostSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PostSeries));
      serviceBinder.AddMethod(__Method_PutSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PutSeries));
      serviceBinder.AddMethod(__Method_DeleteSeries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.SeriesEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.DeleteSeries));
      serviceBinder.AddMethod(__Method_PostUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PostUser));
      serviceBinder.AddMethod(__Method_PutUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserEvaluationUpdate, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PutUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.UserEvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_GetAllEvaluations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.EvaluationsResponse>(serviceImpl.GetAllEvaluations));
      serviceBinder.AddMethod(__Method_GetEvaluationById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationAdd>(serviceImpl.GetEvaluationById));
      serviceBinder.AddMethod(__Method_PostEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationAdd, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PostEvaluation));
      serviceBinder.AddMethod(__Method_DeleteEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.DeleteEvaluation));
      serviceBinder.AddMethod(__Method_GetAllCriteria, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.CriterionsResponse>(serviceImpl.GetAllCriteria));
      serviceBinder.AddMethod(__Method_GetAllMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationEmpty, global::EvaluationSeries.Grpc.MarksResponse>(serviceImpl.GetAllMarks));
      serviceBinder.AddMethod(__Method_PostMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PostMarks));
      serviceBinder.AddMethod(__Method_PutMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.MarksResponse, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.PutMarks));
      serviceBinder.AddMethod(__Method_DeleteMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EvaluationSeries.Grpc.EvaluationAddId, global::EvaluationSeries.Grpc.EvaluationMessageResponse>(serviceImpl.DeleteMarks));
    }

  }
}
#endregion
