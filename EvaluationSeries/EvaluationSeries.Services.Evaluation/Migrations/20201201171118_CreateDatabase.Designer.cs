// <auto-generated />
using System;
using EvaluationSeries.Services.Evaluation.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EvaluationSeries.Services.Evaluation.Migrations
{
    [DbContext(typeof(EvaluationDbContext))]
    [Migration("20201201171118_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.Evaluation2", b =>
                {
                    b.Property<int>("EvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Advantage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Favourite")
                        .HasColumnType("bit");

                    b.Property<string>("Flaw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.HasKey("EvaluationId");

                    b.HasIndex("Id");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.EvaluationCriterion", b =>
                {
                    b.Property<int>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CriteriaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CriteriaId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationId")
                        .HasColumnType("int");

                    b.Property<string>("MarkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarkValue")
                        .HasColumnType("int");

                    b.HasKey("MarkId");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("EvaluationId");

                    b.ToTable("Mark");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.Evaluation2", b =>
                {
                    b.HasOne("EvaluationSeries.Services.Evaluation.Entities.Series", "Series")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.HasOne("EvaluationSeries.Services.Evaluation.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("Series");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EvaluationSeries.Services.Evaluation.Entities.Mark", b =>
                {
                    b.HasOne("EvaluationSeries.Services.Evaluation.Entities.EvaluationCriterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("CriteriaId");

                    b.HasOne("EvaluationSeries.Services.Evaluation.Entities.Evaluation2", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId");

                    b.Navigation("Criterion");

                    b.Navigation("Evaluation");
                });
#pragma warning restore 612, 618
        }
    }
}
